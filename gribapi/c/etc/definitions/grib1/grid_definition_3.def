# Copyright 2005-2007 ECMWF
#
# Licensed under the GNU Lesser General Public License which
# incorporates the terms and conditions of version 3 of the GNU
# General Public License.
# See LICENSE and gpl-3.0.txt for details.

# START 1/grid_definition.lambert_conformal
# GRID DEFINITION Lambert conformal, secant or tangent, conic or bi-polar (normal or

#  Nx - number of points along X-axis
unsigned[2] numberOfPointsAlongXAxis  : dump;
alias Nx =  numberOfPointsAlongXAxis;

#  Ny - number of points along Y-axis
unsigned[2] numberOfPointsAlongYAxis  : dump;
alias Ny =  numberOfPointsAlongYAxis;

#  La1 - latitude of first grid point
signed[3] latitudeOfFirstGridPoint :  edition_specific;
meta latitudeOfFirstGridPointInDegrees  scale(latitudeOfFirstGridPoint,oneConstant,grib1divider) : dump;
alias La1 = latitudeOfFirstGridPoint;

#  Lo1 - longitude of first grid point
signed[3] longitudeOfFirstGridPoint  : edition_specific;
meta longitudeOfFirstGridPointInDegrees  scale(longitudeOfFirstGridPoint,oneConstant,grib1divider) : dump;
alias Lo1 = longitudeOfFirstGridPoint;


#  Resolution and component flags
include "resolution_flags.def";

#  LoV - orientation of the grid; i.e.  the east longitude value of the meridian which is parallel to the Y-axis
# (or columns of the grid)
unsigned[3] orientationOfTheGrid  ;
meta orientationOfTheGridInDegrees  scale(orientationOfTheGrid,oneConstant,grib1divider) : dump;
alias LoV = orientationOfTheGrid;

#  Dx - X-direction grid length
# NOTE 2 NOT FOUND
unsigned[3] xDirectionGridLength  : dump;

alias Dx = xDirectionGridLength;
#  Dy - Y-direction grid length
# NOTE 2 NOT FOUND
unsigned[3] yDirectionGridLength  : dump;

alias Dy = yDirectionGridLength;
#  Projection center flag
# NOTE 5 NOT FOUND
unsigned[1] projectionCenterFlag  : dump;

include "scanning_mode.def";

#  Latin 1 - first latitude from the pole at which the secant cone cuts the sphere
unsigned[3] firstLatitudeFromThePoleAtWhichTheSecantConeCutsTheSphere ;
meta firstLatitudeFromThePoleAtWhichTheSecantConeCutsTheSphereInDegrees
 scale(firstLatitudeFromThePoleAtWhichTheSecantConeCutsTheSphere,oneConstant,grib1divider) : dump;
alias Latin1 = firstLatitudeFromThePoleAtWhichTheSecantConeCutsTheSphere;

#  Latin 2 - second latitude from the pole at which the secant cone cuts the sphere
unsigned[3] secondLatitudeFromThePoleAtWhichTheSecantConeCutsTheSphere ;
meta secondLatitudeFromThePoleAtWhichTheSecantConeCutsTheSphereInDegrees
 scale(secondLatitudeFromThePoleAtWhichTheSecantConeCutsTheSphere,oneConstant,grib1divider) : dump;
alias Latin2 = secondLatitudeFromThePoleAtWhichTheSecantConeCutsTheSphere;

signed[3] latitudeOfSouthernPole ;
meta  latitudeOfSouthernPoleInDegrees   scale(latitudeOfSouthernPole,oneConstant,grib1divider) : dump;

signed[3] longitudeOfSouthernPole ;
meta  longitudeOfSouthernPoleInDegrees   scale(longitudeOfSouthernPole,oneConstant,grib1divider) : dump;

meta numberOfDataPoints number_of_points(Nx,Ny,PLPresent,pl) : dump;
alias numberOfPoints=numberOfDataPoints;
meta numberOfValues number_of_values(values,bitsPerValue,numberOfDataPoints,bitmapPresent,bitmap,numberOfCodedValues) : dump;
alias ls.valuesCount=numberOfValues;


#  Set to zero
# (reserved)
pad padding_grid3_1(2);


# END   1/grid_definition.lambert_conformal ----------------------------------------------------------------------
