# Copyright 2005-2007 ECMWF
#
# Licensed under the GNU Lesser General Public License which
# incorporates the terms and conditions of version 3 of the GNU
# General Public License.
# See LICENSE and gpl-3.0.txt for details.

# grib 1 -> 2
constant gridDefinitionTemplateNumber     = 90;

# START 1/grid_definition.space_view_perspective_or_orthographic
# GRID DEFINITION Space view perspective or orthographic
#  Nx - number of points along X-axis
unsigned[2] numberOfPointsAlongXAxis  : dump;

unsigned[2] numberOfPointsAlongYAxis  : dump;


signed[3] latitudeOfSubSatellitePoint ;
meta latitudeOfSubSatellitePointInDegrees  scale(latitudeOfSubSatellitePoint,oneConstant,grib1divider) : dump;
alias Lap=latitudeOfSubSatellitePoint;

signed[3] longitudeOfSubSatellitePoint ;
meta longitudeOfSubSatellitePointInDegrees  scale(longitudeOfSubSatellitePoint,oneConstant,grib1divider) : dump;
alias Lap=longitudeOfSubSatellitePoint;

include "resolution_flags.def";

unsigned[3] apparentDiameterOfEarthInGridLengthsInXDirection  : dump;


unsigned[3] apparentDiameterOfEarthInGridLengthsInYDirection  : dump;

unsigned[2] xCoordinateOfSubSatellitePoint  : dump;


unsigned[2] yCoordinateOfSubSatellitePoint  : dump;

include "scanning_mode.def";

unsigned[3] orientationOfTheGridInMillidegrees ;
meta orientationOfTheGridInDegrees  scale(orientationOfTheGridInMillidegrees,oneConstant,grib1divider) : dump;

unsigned[3] altitudeOfTheCameraFromTheEarthSCenterMeasuredInUnitsOfTheEarth  : dump;

unsigned[2] xCoordinateOfOriginOfSectorImage  : dump;

unsigned[2] yCoordinateOfOriginOfSectorImage  : dump;

#Ce      Length is normally 32 + stretched and/or rotated
#Ce      parameters + vertical coordinate parameters + list of
#Ce      numbers of points.
#Ce      (Lambert conformal and Mercator are 42 octets in length,
#Ce      while Space view is 40 for ECMWF (44 in GRIB specification)
if ( centre != 98 ) {
  pad padding_grid90_1(6);
}

alias geography.lap = latitudeOfSubSatellitePoint;
alias geography.lop = longitudeOfSubSatellitePoint;

alias geography.nx = numberOfPointsAlongXAxis;
alias geography.ny = numberOfPointsAlongYAxis;

alias geography.Ni = numberOfPointsAlongXAxis;
alias geography.Nj = numberOfPointsAlongYAxis;

alias geography.yo = yCoordinateOfOriginOfSectorImage;
alias geography.xo = xCoordinateOfOriginOfSectorImage;
alias geography.nr = altitudeOfTheCameraFromTheEarthSCenterMeasuredInUnitsOfTheEarth;
alias geography.orientationOfTheGrid = orientationOfTheGridInMillidegrees;

alias geography.Yp = yCoordinateOfSubSatellitePoint;
alias geography.Xp = xCoordinateOfSubSatellitePoint;

alias geography.dy = apparentDiameterOfEarthInGridLengthsInYDirection;
alias geography.dx = apparentDiameterOfEarthInGridLengthsInXDirection;
meta numberOfDataPoints number_of_points(Ni,Nj,PLPresent,pl) : dump;
alias numberOfPoints=numberOfDataPoints;
meta numberOfValues number_of_values(values,bitsPerValue,numberOfDataPoints,bitmapPresent,bitmap,numberOfCodedValues) : dump;
alias ls.valuesCount=numberOfValues;

# END   1/grid_definition.space_view_perspective_or_orthographic ----------------------------------------------------------------------
