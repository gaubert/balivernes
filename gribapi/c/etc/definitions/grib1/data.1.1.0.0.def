# Copyright 2005-2007 ECMWF
#
# Licensed under the GNU Lesser General Public License which
# incorporates the terms and conditions of version 3 of the GNU
# General Public License.
# See LICENSE and gpl-3.0.txt for details.

# For grib1 -> grib2

constant dataRepresentationTemplateNumber = 51;

constant PUnset = -32767;

#

 unsigned[2] N     : read_only,dump;
 signed[2] P  = PUnset : read_only;

 unsigned[1] JS  : dump;
 unsigned[1] KS  : dump;
 unsigned[1] MS  : dump;

 alias subSetJ=JS  ;
 alias subSetK=KS  ;
 alias subSetM=MS  ;

 constant GRIBEXShBugPresent = 1;

 meta laplacianOperator    scale(P,oneConstant,grib1divider,0) : dump;
 meta laplacianOperatorIsSet evaluate(P != PUnset);

 if (localUsePresent) {
   trigger(localDefinitionNumber) {
     transient TS = 0 ;
     meta TScalc spectral_truncation(JS,KS,MS,TS) : read_only,hidden;
     meta Nassigned octect_number(N,4*TScalc) : hidden ;
   }
 }

 position offsetBeforeData;
 meta values data_g1complex_packing(
      section4Length,
      offsetBeforeData,
      offsetSection4,
      numberOfCodedValues,
      nbp,
      referenceValue,
      binaryScaleFactor,
      decimalScaleFactor,

      GRIBEXShBugPresent,
      ieeeFloats,

      laplacianOperatorIsSet,
      laplacianOperator,
      subSetJ,
      subSetK,
      subSetM,
      pentagonalResolutionParameterJ,
      pentagonalResolutionParameterK,
      pentagonalResolutionParameterM,

      halfByte,
      N
 ) : dump ;

meta numberOfCodedValues g1number_of_coded_values_sh_complex(bitsPerValue,offsetBeforeData,offsetAfterData,halfByte,numberOfValues,subSetJ,subSetK,subSetM) : dump;

