/* =============================================================================== */
/* SCHEMA: AUTOSAINT merge from RMSMAN and RMSAUTO @idcdev.ctbto.org               */
/* AUTHOR: guillaume.aubert@ctbto.org
/* DATE	 : 22.01.2008	                                                             */
/* =============================================================================== */

/* =============================================================================== */
/* TABLES FROM RMSMAN*/
/* =============================================================================== */

WHENEVER SQLERROR EXIT SQL.SQLCODE;

----------------------------------------------------------------------
--- GARDS_DETECTORS Basic structure
----------------------------------------------------------------------

  CREATE TABLE GARDS_DETECTORS 
   (	DETECTOR_ID NUMBER, 
	DETECTOR_CODE VARCHAR2(9), 
	DESCRIPTION VARCHAR2(80), 
	LAT NUMBER, 
	LON NUMBER, 
	TYPE VARCHAR2(6), 
	CHANNELS NUMBER, 
	RATED_EFFICIENCY NUMBER, 
	RATED_RESOLUTION NUMBER, 
	ECAL_RANGE_MAX NUMBER, 
	DATE_BEGIN DATE, 
	DATE_END DATE, 
	STATUS VARCHAR2(2), 
	MODDATE DATE
   )  ;
  ALTER TABLE GARDS_DETECTORS ADD CONSTRAINT PK_DETECTORS PRIMARY KEY (DETECTOR_ID) ENABLE;
  ALTER TABLE GARDS_DETECTORS ADD CONSTRAINT UQ_DETECTORS UNIQUE (DETECTOR_CODE) ENABLE;
 
----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  --- Indexes are already created with the table definition

  ---CREATE UNIQUE INDEX PK_DETECTORS ON GARDS_DETECTORS (DETECTOR_ID);
 
  --- CREATE UNIQUE INDEX UQ_DETECTORS ON GARDS_DETECTORS (DETECTOR_CODE);
  
  CREATE TABLE GARDS_STATIONS 
   (	STATION_ID NUMBER, 
	STATION_CODE VARCHAR2(5), 
	COUNTRY_CODE VARCHAR2(2), 
	TYPE VARCHAR2(6), 
	DESCRIPTION VARCHAR2(40), 
	LAT NUMBER, 
	LON NUMBER, 
	ELEVATION NUMBER, 
	DATE_BEGIN DATE, 
	DATE_END DATE, 
	STATUS VARCHAR2(2), 
	POCID NUMBER, 
	SPLIT_STATION NUMBER, 
	MODDATE DATE
   ) ;
  ALTER TABLE GARDS_STATIONS ADD CONSTRAINT CK_STATIONS_SPLIT CHECK (split_station in (1, 0)) ENABLE;
  ALTER TABLE GARDS_STATIONS ADD CONSTRAINT PK_STATIONS PRIMARY KEY (STATION_ID) ENABLE;
  ALTER TABLE GARDS_STATIONS ADD CONSTRAINT UQ_STATIONS UNIQUE (STATION_CODE) ENABLE;
 
----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  --- Indexes already created in table definition
  --- CREATE UNIQUE INDEX PK_STATIONS ON GARDS_STATIONS (STATION_ID) ;
 
  --- CREATE UNIQUE INDEX UQ_STATIONS ON GARDS_STATIONS (STATION_CODE) ;

  CREATE TABLE GARDS_CAT_TEMPLATE 
   (	STATION_ID NUMBER, 
	DETECTOR_ID NUMBER, 
	NAME VARCHAR2(8), 
	METHOD_ID NUMBER, 
	METHOD_TYPE NUMBER, 
	INIT_BEGIN_DATE DATE, 
	INIT_END_DATE DATE, 
	BEGIN_DATE DATE, 
	END_DATE DATE, 
	ANALYST VARCHAR2(30), 
	COMMENT_TEXT VARCHAR2(256), 
	UPPER_BOUND NUMBER, 
	LOWER_BOUND NUMBER, 
	CENTRAL_VALUE NUMBER, 
	DELTA NUMBER, 
	ABSCISSA NUMBER, 
	DEV_TOLERANCE NUMBER, 
	NUM_SAMPLES NUMBER, 
	ALPHA NUMBER, 
	GAMMA NUMBER, 
	TSTAT NUMBER, 
	XFORM NUMBER, 
	MODDATE DATE
   ) ;
  ALTER TABLE GARDS_CAT_TEMPLATE ADD CONSTRAINT FK_DETECTOR FOREIGN KEY (DETECTOR_ID)
	  REFERENCES GARDS_DETECTORS (DETECTOR_ID) ENABLE;
  ALTER TABLE GARDS_CAT_TEMPLATE ADD CONSTRAINT FK_STATION FOREIGN KEY (STATION_ID)
	  REFERENCES GARDS_STATIONS (STATION_ID) ENABLE;
 
  CREATE TABLE GARDS_SAMPLE_DATA 
   (	SITE_DET_CODE CHAR(15), 
	SAMPLE_ID NUMBER, 
	STATION_ID NUMBER, 
	DETECTOR_ID NUMBER, 
	INPUT_FILE_NAME VARCHAR2(256), 
	SAMPLE_TYPE CHAR(1), 
	DATA_TYPE CHAR(1), 
	GEOMETRY VARCHAR2(17), 
	SPECTRAL_QUALIFIER VARCHAR2(5), 
	TRANSMIT_DTG DATE, 
	COLLECT_START DATE, 
	COLLECT_STOP DATE, 
	ACQUISITION_START DATE, 
	ACQUISITION_STOP DATE, 
	ACQUISITION_REAL_SEC NUMBER, 
	ACQUISITION_LIVE_SEC NUMBER, 
	QUANTITY NUMBER, 
	MODDATE DATE
   )  ;
  ALTER TABLE GARDS_SAMPLE_DATA ADD CONSTRAINT PK_SAMPLE_DATA PRIMARY KEY (SAMPLE_ID) ENABLE;
  --- remove it for the moment
  --- ALTER TABLE GARDS_SAMPLE_DATA ADD CONSTRAINT UQ_SAMPLE_DATA UNIQUE (STATION_ID, DETECTOR_ID, SPECTRAL_QUALIFIER, COLLECT_STOP, ACQUISITION_STOP, TRANSMIT_DTG) ENABLE;
 
----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  CREATE INDEX GSD_ACQUISITION_START_NDX ON GARDS_SAMPLE_DATA (ACQUISITION_START)  
  ;
 
  CREATE INDEX GSD_COLLECT_STOP_NDX ON GARDS_SAMPLE_DATA (COLLECT_STOP)  
  ;
 
  --- created in table def (primary key)
  --- CREATE UNIQUE INDEX UQ_SAMPLE_DATA ON GARDS_SAMPLE_DATA (STATION_ID, DETECTOR_ID, SPECTRAL_QUALIFIER, COLLECT_STOP, ACQUISITION_STOP, TRANSMIT_DTG) ;
 
  CREATE INDEX SAMPLE_DATA_NDX ON GARDS_SAMPLE_DATA (STATION_ID, DETECTOR_ID, COLLECT_STOP, DATA_TYPE, SAMPLE_TYPE, SPECTRAL_QUALIFIER) 
  ;
 

  CREATE TABLE GARDS_NUCL_LIB 
   (	NUCLIDE_ID NUMBER, 
	NAME VARCHAR2(8), 
	TYPE VARCHAR2(16), 
	HALFLIFE_SEC NUMBER, 
	HALFLIFE VARCHAR2(23), 
	HALFLIFE_ERR VARCHAR2(23), 
	NUM_LINES NUMBER, 
	MODDATE DATE, 
	NUC_COMMENT VARCHAR2(1500)
   ) ;
 

   CREATE TABLE GARDS_NUCL_LINES_LIB
   (    NAME VARCHAR2(8),
    ENERGY NUMBER,
    ENERGY_ERR NUMBER,
    ABUNDANCE NUMBER,
    ABUNDANCE_ERR NUMBER,
    KEY_FLAG NUMBER,
    NUCLIDE_ID NUMBER,
    MODDATE DATE,
    LINECOMMENT VARCHAR2(1500)
   ) ;

  
  CREATE TABLE GARDS_PRODUCT 
   (	SAMPLE_ID NUMBER, 
	FOFF NUMBER, 
	DSIZE NUMBER, 
	DIR VARCHAR2(256), 
	DFILE VARCHAR2(32), 
	AUTHOR VARCHAR2(30), 
	REVISION NUMBER, 
	TYPEID NUMBER, 
	MODDATE DATE
   ) ;
 

  CREATE TABLE GARDS_PRODUCT_TYPE 
   (	TYPEID NUMBER, 
	PRODTYPE VARCHAR2(12), 
	NAME VARCHAR2(64), 
	MODDATE DATE
   ) ;
 

  CREATE TABLE GARDS_REFLINE_MASTER
   (	REFPEAK_ENERGY NUMBER, 
	DATA_TYPE CHAR(1), 
	SPECTRAL_QUALIFIER VARCHAR2(5), 
	CALIBRATION_TYPE VARCHAR2(3), 
	MODDATE DATE
   ) ;
 
  CREATE TABLE GARDS_RELEVANT_NUCLIDES
   (    NAME VARCHAR2(8),
    TYPE VARCHAR2(16),
    SAMPLE_TYPE CHAR(1),
    MODDATE DATE
   ) ;

  CREATE TABLE GARDS_SAMPLE_CAT
   (    SAMPLE_ID NUMBER NOT NULL ENABLE,
    NAME VARCHAR2(8) NOT NULL ENABLE,
    METHOD_ID NUMBER,
    CATEGORY NUMBER,
    UPPER_BOUND NUMBER,
    LOWER_BOUND NUMBER,
    CENTRAL_VALUE NUMBER,
    DELTA NUMBER,
    ACTIVITY NUMBER,
    HOLD NUMBER,
    MODDATE DATE
   ) ;
  ALTER TABLE GARDS_SAMPLE_CAT ADD CONSTRAINT FK_SAMP_ID FOREIGN KEY (SAMPLE_ID)
      REFERENCES GARDS_SAMPLE_DATA (SAMPLE_ID) ON DELETE CASCADE ENABLE;

----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  CREATE INDEX SAMP_CAT_NDX ON GARDS_SAMPLE_CAT (SAMPLE_ID) 
  ;

  CREATE TABLE GARDS_USERENV
   (    NAME VARCHAR2(40) NOT NULL ENABLE,
    VALUE VARCHAR2(256) NOT NULL ENABLE,
    MODDATE DATE
   ) ;
  ALTER TABLE GARDS_USERENV ADD CONSTRAINT UQ_USERENV UNIQUE (NAME) ENABLE;

----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  --- already created in table definition
  --- CREATE UNIQUE INDEX UQ_USERENV ON GARDS_USERENV (NAME) ;

/* =============================================================================== */
/* Create Table from RMSAUTO                                                       */
/* =============================================================================== */

  CREATE TABLE GARDS_COMMENTS 
   (	SAMPLE_ID NUMBER, 
	PEAK_ID NUMBER, 
	NUCL_NAME VARCHAR2(8), 
	COMMENT_ID NUMBER, 
	ANALYST VARCHAR2(30), 
	DTG DATE, 
	COMMENT_TYPE NUMBER, 
	MODDATE DATE
   ) ;
  ALTER TABLE GARDS_COMMENTS ADD CONSTRAINT PK_COMMENTS PRIMARY KEY (COMMENT_ID) ENABLE;
  ALTER TABLE GARDS_COMMENTS ADD CONSTRAINT FK_COMMENTS FOREIGN KEY (SAMPLE_ID)
	  REFERENCES GARDS_SAMPLE_DATA (SAMPLE_ID) ON DELETE CASCADE ENABLE;
 
----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  CREATE INDEX COMMENTS_NDX ON GARDS_COMMENTS (SAMPLE_ID, ANALYST)  
  ;
 
  --- primary key already created in the table definition
  ---CREATE UNIQUE INDEX PK_COMMENTS ON GARDS_COMMENTS (COMMENT_ID);
 

  CREATE TABLE GARDS_EFFICIENCY_CAL 
   (	SAMPLE_ID NUMBER, 
	DEGREE NUMBER, 
	EFFTYPE CHAR(8), 
	COEFF1 NUMBER, 
	COEFF2 NUMBER, 
	COEFF3 NUMBER, 
	COEFF4 NUMBER, 
	COEFF5 NUMBER, 
	COEFF6 NUMBER, 
	COEFF7 NUMBER, 
	COEFF8 NUMBER, 
	MODDATE DATE
   ) ;
  ALTER TABLE GARDS_EFFICIENCY_CAL ADD CONSTRAINT FK_EFFICIENCY_CAL FOREIGN KEY (SAMPLE_ID)
	  REFERENCES GARDS_SAMPLE_DATA (SAMPLE_ID) ON DELETE CASCADE ENABLE;
 
----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  CREATE INDEX EFFICIENCY_CAL_NDX ON GARDS_EFFICIENCY_CAL (SAMPLE_ID)  
  ;
 

  CREATE TABLE GARDS_EFFICIENCY_PAIRS
   (    SAMPLE_ID NUMBER,
    EFFIC_ENERGY NUMBER,
    EFFICIENCY NUMBER,
    EFFIC_ERROR NUMBER
   ) ;
  ALTER TABLE GARDS_EFFICIENCY_PAIRS ADD CONSTRAINT FK_EFFICIENCY_PAIRS FOREIGN KEY (SAMPLE_ID)
      REFERENCES GARDS_SAMPLE_DATA (SAMPLE_ID) ON DELETE CASCADE ENABLE;

----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  CREATE INDEX EFFICIENCY_PAIRS_NDX ON GARDS_EFFICIENCY_PAIRS (SAMPLE_ID) 
  ;


  CREATE TABLE GARDS_ENERGY_CAL
   (    SAMPLE_ID NUMBER,
    COEFF1 NUMBER,
    COEFF2 NUMBER,
    COEFF3 NUMBER,
    COEFF4 NUMBER,
    COEFF5 NUMBER,
    COEFF6 NUMBER,
    COEFF7 NUMBER,
    COEFF8 NUMBER,
    ENERGY_UNITS CHAR(3),
    CNV_FACTOR NUMBER,
    APE NUMBER,
    DET NUMBER,
    MSE NUMBER,
    TSTAT NUMBER,
    SCORE NUMBER,
    MODDATE DATE
   ) ;
  ALTER TABLE GARDS_ENERGY_CAL ADD CONSTRAINT FK_ENERGY_CAL FOREIGN KEY (SAMPLE_ID)
      REFERENCES GARDS_SAMPLE_DATA (SAMPLE_ID) ON DELETE CASCADE ENABLE;

----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  CREATE INDEX ENERGY_CAL_NDX ON GARDS_ENERGY_CAL (SAMPLE_ID) 
  ;


  CREATE TABLE GARDS_ENERGY_PAIRS
   (    SAMPLE_ID NUMBER,
    CAL_ENERGY NUMBER,
    CHANNEL NUMBER,
    CAL_ERROR NUMBER
   ) ;
  ALTER TABLE GARDS_ENERGY_PAIRS ADD CONSTRAINT FK_ENERGY_PAIRS FOREIGN KEY (SAMPLE_ID)
      REFERENCES GARDS_SAMPLE_DATA (SAMPLE_ID) ON DELETE CASCADE ENABLE;

----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  CREATE INDEX ENERGY_PAIRS_NDX ON GARDS_ENERGY_PAIRS (SAMPLE_ID) 
  ;

CREATE TABLE GARDS_ENERGY_PAIRS_ORIG
   (    SAMPLE_ID NUMBER,
    CAL_ENERGY NUMBER,
    CHANNEL NUMBER,
    CAL_ERROR NUMBER,
    MODDATE DATE
   ) ;
  ALTER TABLE GARDS_ENERGY_PAIRS_ORIG ADD CONSTRAINT FK_ENERGY_PAIRS_ORIG FOREIGN KEY (SAMPLE_ID)
      REFERENCES GARDS_SAMPLE_DATA (SAMPLE_ID) ON DELETE CASCADE ENABLE;

----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  CREATE INDEX ENERGY_PAIRS_ORIG_NDX ON GARDS_ENERGY_PAIRS_ORIG (SAMPLE_ID) 
  ;


  CREATE TABLE GARDS_NUCL_IDED
   (    SAMPLE_ID NUMBER NOT NULL ENABLE,
    STATION_ID NUMBER NOT NULL ENABLE,
    DETECTOR_ID NUMBER NOT NULL ENABLE,
    NUCLIDE_ID NUMBER,
    NAME VARCHAR2(8),
    TYPE VARCHAR2(16),
    HALFLIFE VARCHAR2(23),
    AVE_ACTIV NUMBER,
    AVE_ACTIV_ERR NUMBER,
    ACTIV_KEY NUMBER,
    ACTIV_KEY_ERR NUMBER,
    MDA NUMBER,
    MDA_ERR NUMBER,
    NID_FLAG NUMBER,
    ACTIV_DECAY NUMBER,
    ACTIV_DECAY_ERR NUMBER,
    COMP_CONFID NUMBER,
    REPORT_MDA NUMBER,
    PD_MOD_FLAG NUMBER,
    CSC_RATIO NUMBER,
    CSC_RATIO_ERR NUMBER,
    CSC_MOD_FLAG NUMBER,
    MODDATE DATE
   )  ;
  ALTER TABLE GARDS_NUCL_IDED ADD CONSTRAINT PK_NUCL_IDED PRIMARY KEY (SAMPLE_ID, NAME) ENABLE;
  ALTER TABLE GARDS_NUCL_IDED ADD CONSTRAINT FK_NUCL_IDED FOREIGN KEY (SAMPLE_ID)
      REFERENCES GARDS_SAMPLE_DATA (SAMPLE_ID) ON DELETE CASCADE ENABLE;

----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  --- created in table def (primary key)
  --- CREATE UNIQUE INDEX PK_NUCL_IDED ON GARDS_NUCL_IDED (SAMPLE_ID, NAME)  ;



  CREATE TABLE GARDS_NUCL_IDED_ORIG
   (    SAMPLE_ID NUMBER NOT NULL ENABLE,
    STATION_ID NUMBER NOT NULL ENABLE,
    DETECTOR_ID NUMBER NOT NULL ENABLE,
    NUCLIDE_ID NUMBER,
    NAME VARCHAR2(8),
    TYPE VARCHAR2(16),
    HALFLIFE VARCHAR2(23),
    AVE_ACTIV NUMBER,
    AVE_ACTIV_ERR NUMBER,
    ACTIV_KEY NUMBER,
    ACTIV_KEY_ERR NUMBER,
    MDA NUMBER,
    MDA_ERR NUMBER,
    NID_FLAG NUMBER,
    ACTIV_DECAY NUMBER,
    ACTIV_DECAY_ERR NUMBER,
    COMP_CONFID NUMBER,
    REPORT_MDA NUMBER,
    PD_MOD_FLAG NUMBER,
    CSC_RATIO NUMBER,
    CSC_RATIO_ERR NUMBER,
    CSC_MOD_FLAG NUMBER,
    MODDATE DATE
   )  ;
  ALTER TABLE GARDS_NUCL_IDED_ORIG ADD CONSTRAINT PK_NUCL_IDED_ORIG PRIMARY KEY (SAMPLE_ID, NAME) ENABLE;
  ALTER TABLE GARDS_NUCL_IDED_ORIG ADD CONSTRAINT FK_NUCL_IDED_ORIG FOREIGN KEY (SAMPLE_ID)
      REFERENCES GARDS_SAMPLE_DATA (SAMPLE_ID) ON DELETE CASCADE ENABLE;

----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  --- created in table def (primary key)
  --- CREATE UNIQUE INDEX PK_NUCL_IDED_ORIG ON GARDS_NUCL_IDED_ORIG (SAMPLE_ID, NAME) ;


  CREATE TABLE GARDS_NUCL_LINES_IDED 
   (	
    SAMPLE_ID NUMBER NOT NULL ENABLE, 
	STATION_ID NUMBER NOT NULL ENABLE, 
	DETECTOR_ID NUMBER NOT NULL ENABLE, 
	NAME VARCHAR2(8), 
	ENERGY NUMBER, 
	ENERGY_ERR NUMBER, 
	ABUNDANCE NUMBER, 
	ABUNDANCE_ERR NUMBER, 
	PEAK NUMBER, 
	ACTIVITY NUMBER, 
	ACTIV_ERR NUMBER, 
	EFFIC NUMBER, 
	EFFIC_ERR NUMBER, 
	MDA NUMBER, 
	KEY_FLAG NUMBER, 
	NUCLIDE_ID NUMBER, 
	CSC_RATIO NUMBER, 
	CSC_RATIO_ERR NUMBER, 
	CSC_MOD_FLAG NUMBER, 
	MODDATE DATE, 
	ID_PERCENT NUMBER
   )  ;
  ALTER TABLE GARDS_NUCL_LINES_IDED ADD CONSTRAINT FK_NUCL_LINES_IDED FOREIGN KEY (SAMPLE_ID)
	  REFERENCES GARDS_SAMPLE_DATA (SAMPLE_ID) ON DELETE CASCADE ENABLE;
 
----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  --- already created in table definition
  --- CREATE INDEX NUCL_LINES_IDED_NDX ON GARDS_NUCL_LINES_IDED (SAMPLE_ID, PEAK, NAME) ;
 

  CREATE TABLE GARDS_NUCL_LINES_IDED_ORIG 
   (	SAMPLE_ID NUMBER NOT NULL ENABLE, 
	STATION_ID NUMBER NOT NULL ENABLE, 
	DETECTOR_ID NUMBER NOT NULL ENABLE, 
	NAME VARCHAR2(8), 
	ENERGY NUMBER, 
	ENERGY_ERR NUMBER, 
	ABUNDANCE NUMBER, 
	ABUNDANCE_ERR NUMBER, 
	PEAK NUMBER, 
	ACTIVITY NUMBER, 
	ACTIV_ERR NUMBER, 
	EFFIC NUMBER, 
	EFFIC_ERR NUMBER, 
	MDA NUMBER, 
	KEY_FLAG NUMBER, 
	NUCLIDE_ID NUMBER, 
	CSC_RATIO NUMBER, 
	CSC_RATIO_ERR NUMBER, 
	CSC_MOD_FLAG NUMBER, 
	MODDATE DATE, 
	ID_PERCENT NUMBER
   )  ;
  ALTER TABLE GARDS_NUCL_LINES_IDED_ORIG ADD CONSTRAINT FK_NUCL_LINES_IDED_ORIG FOREIGN KEY (SAMPLE_ID)
	  REFERENCES GARDS_SAMPLE_DATA (SAMPLE_ID) ON DELETE CASCADE ENABLE;
 
----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  CREATE INDEX NUCL_LINES_IDED_ORIG_NDX ON GARDS_NUCL_LINES_IDED_ORIG (SAMPLE_ID, PEAK, NAME) 
  ;
 

  CREATE TABLE GARDS_PEAKS 
   (	SAMPLE_ID NUMBER, 
	PEAK_ID NUMBER, 
	CENTROID NUMBER, 
	CENTROID_ERR NUMBER, 
	ENERGY NUMBER, 
	ENERGY_ERR NUMBER, 
	LEFT_CHAN NUMBER, 
	WIDTH NUMBER, 
	BACK_COUNT NUMBER, 
	BACK_UNCER NUMBER, 
	FWHM NUMBER, 
	FWHM_ERR NUMBER, 
	AREA NUMBER, 
	AREA_ERR NUMBER, 
	ORIGINAL_AREA NUMBER, 
	ORIGINAL_UNCER NUMBER, 
	COUNTS_SEC NUMBER, 
	COUNTS_SEC_ERR NUMBER, 
	EFFICIENCY NUMBER, 
	EFF_ERROR NUMBER, 
	BACK_CHANNEL NUMBER, 
	IDED NUMBER, 
	FITTED NUMBER, 
	MULTIPLET NUMBER, 
	LC NUMBER, 
	PEAK_SIG NUMBER, 
	PEAK_TOL NUMBER, 
	PSS NUMBER, 
	MODDATE DATE, 
	DETECTABILITY NUMBER
   ) ;
  ALTER TABLE GARDS_PEAKS ADD CONSTRAINT FK_PEAKS FOREIGN KEY (SAMPLE_ID)
	  REFERENCES GARDS_SAMPLE_DATA (SAMPLE_ID) ON DELETE CASCADE ENABLE;
 
----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  CREATE INDEX PEAKS_NDX ON GARDS_PEAKS (SAMPLE_ID, PEAK_ID, ENERGY, IDED) 
  ;
 

  CREATE TABLE GARDS_PEAKS_ORIG 
   (	SAMPLE_ID NUMBER, 
	PEAK_ID NUMBER, 
	CENTROID NUMBER, 
	CENTROID_ERR NUMBER, 
	ENERGY NUMBER, 
	ENERGY_ERR NUMBER, 
	LEFT_CHAN NUMBER, 
	WIDTH NUMBER, 
	BACK_COUNT NUMBER, 
	BACK_UNCER NUMBER, 
	FWHM NUMBER, 
	FWHM_ERR NUMBER, 
	AREA NUMBER, 
	AREA_ERR NUMBER, 
	ORIGINAL_AREA NUMBER, 
	ORIGINAL_UNCER NUMBER, 
	COUNTS_SEC NUMBER, 
	COUNTS_SEC_ERR NUMBER, 
	EFFICIENCY NUMBER, 
	EFF_ERROR NUMBER, 
	BACK_CHANNEL NUMBER, 
	IDED NUMBER, 
	FITTED NUMBER, 
	MULTIPLET NUMBER, 
	LC NUMBER, 
	PEAK_SIG NUMBER, 
	PEAK_TOL NUMBER, 
	PSS NUMBER, 
	MODDATE DATE, 
	DETECTABILITY NUMBER
   ) ;
  ALTER TABLE GARDS_PEAKS_ORIG ADD CONSTRAINT FK_PEAKS_ORIG FOREIGN KEY (SAMPLE_ID)
	  REFERENCES GARDS_SAMPLE_DATA (SAMPLE_ID) ON DELETE CASCADE ENABLE;
 
----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  CREATE INDEX PEAKS_ORIG_NDX ON GARDS_PEAKS_ORIG (SAMPLE_ID, PEAK_ID, ENERGY, IDED) 
  ;
 
  CREATE TABLE GARDS_RESOLUTION_CAL
   (    SAMPLE_ID NUMBER,
    COEFF1 NUMBER,
    COEFF2 NUMBER,
    COEFF3 NUMBER,
    COEFF4 NUMBER,
    COEFF5 NUMBER,
    COEFF6 NUMBER,
    COEFF7 NUMBER,
    COEFF8 NUMBER,
    MODDATE DATE
   ) ;
  ALTER TABLE GARDS_RESOLUTION_CAL ADD CONSTRAINT FK_RESOLUTION_CAL FOREIGN KEY (SAMPLE_ID)
      REFERENCES GARDS_SAMPLE_DATA (SAMPLE_ID) ON DELETE CASCADE ENABLE;

----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  CREATE INDEX RESOLUTION_CAL_NDX ON GARDS_RESOLUTION_CAL (SAMPLE_ID) 
  ;

  CREATE TABLE GARDS_RESOLUTION_PAIRS 
   (	SAMPLE_ID NUMBER, 
	RES_ENERGY NUMBER, 
	RESOLUTION NUMBER, 
	RES_ERROR NUMBER
   ) ;
  ALTER TABLE GARDS_RESOLUTION_PAIRS ADD CONSTRAINT FK_RESOLUTION_PAIRS FOREIGN KEY (SAMPLE_ID)
	  REFERENCES GARDS_SAMPLE_DATA (SAMPLE_ID) ON DELETE CASCADE ENABLE;
 
----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  CREATE INDEX RESOLUTION_PAIRS_NDX ON GARDS_RESOLUTION_PAIRS (SAMPLE_ID) 
  ;
 
  CREATE TABLE GARDS_RESOLUTION_PAIRS_ORIG
   (    SAMPLE_ID NUMBER,
    RES_ENERGY NUMBER,
    RESOLUTION NUMBER,
    RES_ERROR NUMBER,
    MODDATE DATE
   ) ;
  ALTER TABLE GARDS_RESOLUTION_PAIRS_ORIG ADD CONSTRAINT FK_RESOLUTION_PAIRS_ORIG FOREIGN KEY (SAMPLE_ID)
      REFERENCES GARDS_SAMPLE_DATA (SAMPLE_ID) ON DELETE CASCADE ENABLE;

----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  CREATE INDEX RESOLUTION_PAIRS_ORIG_NDX ON GARDS_RESOLUTION_PAIRS_ORIG (SAMPLE_ID) 
  ;

  CREATE TABLE GARDS_SAMPLE_AUX
   (    SAMPLE_ID NUMBER,
    SAMPLE_REF_ID VARCHAR2(32),
    MEASUREMENT_ID VARCHAR2(31),
    BKGD_MEASUREMENT_ID VARCHAR2(31),
    SAMPLE_HEIGHT NUMBER,
    CALIBRATION_DTG DATE,
    MSG_ID NUMBER,
    ARCHIVE_BOTTLE_ID CHAR(2),
    GAS_BKGD_MEASUREMENT_ID VARCHAR2(31),
    XE_COLLECT_YIELD NUMBER,
    XE_COLLECT_YIELD_ERR NUMBER,
    XE_VOLUME NUMBER,
    XE_VOLUME_ERR NUMBER,
    SAMPLE_DIAMETER NUMBER,
    MODDATE DATE
   ) ;
  ALTER TABLE GARDS_SAMPLE_AUX ADD CONSTRAINT PK_SAMPLE_AUX PRIMARY KEY (SAMPLE_ID) ENABLE;
  ALTER TABLE GARDS_SAMPLE_AUX ADD CONSTRAINT FK_SAMPLE_AUX FOREIGN KEY (SAMPLE_ID)
      REFERENCES GARDS_SAMPLE_DATA (SAMPLE_ID) ON DELETE CASCADE ENABLE;

----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  --- created in table def (primary key)
  --- CREATE UNIQUE INDEX PK_SAMPLE_AUX ON GARDS_SAMPLE_AUX (SAMPLE_ID);
 
  CREATE TABLE GARDS_SAMPLE_FLAGS
   (    SAMPLE_ID NUMBER,
    FLAG_ID NUMBER,
    RESULT NUMBER,
    VALUE NUMBER,
    MODDATE DATE
   ) ;
  ALTER TABLE GARDS_SAMPLE_FLAGS ADD CONSTRAINT FK_SAMPLE_FLAGS FOREIGN KEY (SAMPLE_ID)
      REFERENCES GARDS_SAMPLE_DATA (SAMPLE_ID) ON DELETE CASCADE ENABLE;

----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  CREATE INDEX SAMPLE_FLAGS_NDX ON GARDS_SAMPLE_FLAGS (SAMPLE_ID) 
  ;

  CREATE TABLE GARDS_SAMPLE_STATUS 
   (	SAMPLE_ID NUMBER, 
	ENTRY_DATE DATE, 
	CNF_BEGIN_DATE DATE, 
	CNF_END_DATE DATE, 
	REVIEW_DATE DATE, 
	REVIEW_TIME NUMBER, 
	ANALYST VARCHAR2(30), 
	STATUS CHAR(1), 
	CATEGORY NUMBER, 
	AUTO_CATEGORY NUMBER, 
	RELEASE_DATE DATE, 
	MODDATE DATE
   ) ;
  ALTER TABLE GARDS_SAMPLE_STATUS ADD CONSTRAINT PK_SAMPLE_STATUS PRIMARY KEY (SAMPLE_ID) ENABLE;
  ALTER TABLE GARDS_SAMPLE_STATUS ADD CONSTRAINT FK_SAMPLE_STATUS FOREIGN KEY (SAMPLE_ID)
	  REFERENCES GARDS_SAMPLE_DATA (SAMPLE_ID) ON DELETE CASCADE ENABLE;
 
----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  --- created in table def (primary key)
  --- CREATE UNIQUE INDEX PK_SAMPLE_STATUS ON GARDS_SAMPLE_STATUS (SAMPLE_ID) ;
 
  CREATE INDEX SAMPLE_STATUS_NDX ON GARDS_SAMPLE_STATUS (SAMPLE_ID, STATUS) 
  ;

  CREATE TABLE GARDS_SOH_CHAR_DATA 
   (	STATION_ID NUMBER, 
	DETECTOR_ID NUMBER, 
	PARAM_CODE NUMBER, 
	VALUE VARCHAR2(30), 
	DTG_BEGIN DATE, 
	DTG_END DATE, 
	MODDATE DATE, 
	SOH_CHAR_ID NUMBER
   ) ;
 
  --- Not inline with the data at the moment
  --- ALTER TABLE GARDS_SOH_CHAR_DATA ADD CONSTRAINT UQ_SOH_CHAR_DATA UNIQUE (STATION_ID, DETECTOR_ID, PARAM_CODE, DTG_BEGIN, DTG_END) ENABLE;
 
----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  CREATE INDEX SOH_CHAR_DATA_NDX ON GARDS_SOH_CHAR_DATA (STATION_ID, DTG_BEGIN, DTG_END, PARAM_CODE) 
  ;
 
  CREATE INDEX SOH_CHAR_DATA_NDX1 ON GARDS_SOH_CHAR_DATA (DTG_END) 
  ;
 
  --- Already created in table definition
  --- CREATE UNIQUE INDEX UQ_SOH_CHAR_DATA ON GARDS_SOH_CHAR_DATA (STATION_ID, DETECTOR_ID, PARAM_CODE, DTG_BEGIN, DTG_END) 
  ;

  CREATE TABLE GARDS_SOH_NUM_DATA 
   (	STATION_ID NUMBER, 
	DETECTOR_ID NUMBER, 
	PARAM_CODE NUMBER, 
	VALUE NUMBER, 
	DTG_BEGIN DATE, 
	DTG_END DATE, 
	MODDATE DATE, 
	SOH_NUM_ID NUMBER
   ) ;

  --- not inline with the schema at the moment
  --- ALTER TABLE GARDS_SOH_NUM_DATA ADD CONSTRAINT UQ_SOH_NUM_DATA UNIQUE (STATION_ID, DETECTOR_ID, PARAM_CODE, DTG_BEGIN, DTG_END, SOH_NUM_ID) ENABLE;
  ALTER TABLE GARDS_SOH_NUM_DATA ADD CONSTRAINT FK_SOH_NUM_DATA_STA FOREIGN KEY (STATION_ID)
	  REFERENCES GARDS_STATIONS (STATION_ID) ON DELETE CASCADE ENABLE;

  --- Table added manually

  CREATE TABLE GARDS_BASELINE
  (
    DETECTOR_ID NUMBER,
    DATA_TYPE   CHAR(1) NOT NULL ENABLE,
    INDEX_NO    NUMBER NOT NULL ENABLE,
    ENERGY_LOW  NUMBER,
    ENERGY_HIGH NUMBER,
    MULT        NUMBER NOT NULL ENABLE,
    NO_OF_LOOPS NUMBER NOT NULL ENABLE,
    MODDATE      DATE DEFAULT SYSDATE
  ) ;

  CREATE TABLE GARDS_ENERGY_CAL_COV
  (
    SAMPLE_ID       NUMBER(22),
    ROW_INDEX       NUMBER(10),
    COL_INDEX       NUMBER(10),
    COEFF           NUMBER(22),
    MODDATE         DATE DEFAULT SYSDATE
  ) ;

  CREATE TABLE GARDS_QC_RESULTS 
  (
    SAMPLE_ID       NUMBER(22),
    TEST_NAME       VARCHAR2(32),
    FLAG            CHAR(1),
    QC_COMMENT      VARCHAR2(255),                        
    MODDATE         DATE
  ) ; 
  
  CREATE TABLE GARDS_RESOLUTION_CAL_COV
  (
    SAMPLE_ID       NUMBER(22),
    ROW_INDEX       NUMBER(10),
    COL_INDEX       NUMBER(10),
    COEFF           NUMBER(22),
    MODDATE         DATE DEFAULT SYSDATE
  ) ;

  CREATE TABLE GARDS_IRF
  (
    DETECTOR_ID     NUMBER NOT NULL ENABLE,
    ENERGY          NUMBER,
    IRF             NUMBER,
    IRF_ERROR       NUMBER,
    SUM_CORR        NUMBER,
    NUCLIDE_NAME    VARCHAR2(8),
    BEGIN_DATE      DATE,
    END_DATE        DATE,
    MODDATE         DATE DEFAULT SYSDATE
  ) ;

  CREATE TABLE GARDS_READ_SAMPLE_STATUS
  (
     SAMPLE_ID                                 NUMBER NOT NULL ENABLE, 
     ENTRY_DATE                                DATE,
     CNF_BEGIN_DATE                            DATE,
     CNF_END_DATE                              DATE,
     REVIEW_DATE                               DATE,
     REVIEW_TIME                               NUMBER,
     ANALYST                                   VARCHAR2(30),
     STATUS                                    CHAR(1),
     CATEGORY                                  NUMBER,
     AUTO_CATEGORY                             NUMBER,
     RELEASE_DATE                              DATE,
     MODDATE                                   DATE
  );

  CREATE TABLE GARDS_SPECTRUM
  (
     SAMPLE_ID                                 NUMBER NOT NULL ENABLE,
     SAMPLE_TYPE                               CHAR(1),
     FILENAME                                  VARCHAR2(256),
     CHANNELS                                  NUMBER,
     ENERGY_SPAN                               NUMBER,
     MODDATE                                   DATE
  );
 
  CREATE TABLE GARDS_EFFICIENCY_VGSL_PAIRS
  (
     DETECTOR_CODE  NUMBER NOT NULL,
     EFFIC_ENERGY   NUMBER,
     EFFICIENCY     NUMBER,
     EFFIC_ERROR    NUMBER,
     MODDATE        DATE DEFAULT SYSDATE
  );

  CREATE TABLE GARDS_FLAGS
  (
      FLAG_ID       NUMBER(8) NOT NULL,
      NAME          VARCHAR2(32),
      THRESHOLD     NUMBER,
      UNITS         VARCHAR2(16),
      TEST          VARCHAR2(8),
      MODDATE       DATE DEFAULT SYSDATE
  );

 
----------------------------------------------------------------------
--- Indexes for efficiency
----------------------------------------------------------------------

  CREATE INDEX SOH_NUM_DATA_NDX ON GARDS_SOH_NUM_DATA (STATION_ID, DTG_BEGIN, DTG_END, PARAM_CODE) 
  ;
 
  CREATE INDEX SOH_NUM_DTG_BEGIN_NDX ON GARDS_SOH_NUM_DATA (DTG_BEGIN) 
  ;
 
  CREATE INDEX SOH_NUM_DTG_END_NDX ON GARDS_SOH_NUM_DATA (DTG_END) 
  ;
 
  CREATE INDEX SOH_NUM_STAPAR_NDX ON GARDS_SOH_NUM_DATA (STATION_ID, DETECTOR_ID, PARAM_CODE) 
  ;
 
  --- Already created in table definition
  --- CREATE UNIQUE INDEX UQ_SOH_NUM_DATA ON GARDS_SOH_NUM_DATA (STATION_ID, DETECTOR_ID, PARAM_CODE, DTG_BEGIN, DTG_END) ;

----------------------------------------------------------------------
--- Create from IDCX
----------------------------------------------------------------------

  CREATE TABLE FILEPRODUCT
  (
    FPID         NUMBER(10) NOT NULL ENABLE,
    TYPEID       NUMBER(10),
    DIR          VARCHAR2(64),
    DFILE        VARCHAR2(32),
    FOFF         NUMBER(10),
    DSIZE        NUMBER(10),
    TIME         FLOAT(53),
    ENDTIME      FLOAT(53),
    STA          VARCHAR2(6),
    CHAN         VARCHAR2(8),
    AUTHOR       VARCHAR2(16),
    VERSION      FLOAT(53),
    REVISION     NUMBER(4),
    OBSOLETE     NUMBER(1),
    LDDATE       DATE
  ) ;

  CREATE TABLE FPDESCRIPTION
  (
    TYPEID       NUMBER(10) NOT NULL ENABLE,
    PRODTYPE     VARCHAR2(12),
    NAME         VARCHAR2(64),
    MSGDTYPE     VARCHAR2(16),
    MSGDFORMAT   VARCHAR2(8),
    HEADER_FPID  NUMBER(10),
    LDDATE       DATE
  ) ;

----------------------------------------------------------------------
--- Grants to other accounts
----------------------------------------------------------------------

  /* GRANT SELECT ON GARDS_DETECTORS TO PUBLIC; */
 
  /* GRANT SELECT ON GARDS_DETECTORS TO RMSAUTO; */

  /* GRANT SELECT ON GARDS_CAT_TEMPLATE TO PUBLIC; */
  /* GRANT SELECT ON GARDS_CAT_TEMPLATE TO RMSAUTO;  */
 
  /* GRANT SELECT ON GARDS_NUCL_LIB TO PUBLIC; */
 
  /* GRANT SELECT ON GARDS_NUCL_LIB TO RMSAUTO; */

  /* GRANT SELECT ON GARDS_NUCL_LINES_LIB TO PUBLIC; */

  /* GRANT SELECT ON GARDS_NUCL_LINES_LIB TO RMSAUTO; */

  /* GRANT SELECT ON GARDS_PRODUCT TO PUBLIC; */
 
  /* GRANT ALTER ON GARDS_PRODUCT TO RMSAUTO; */
 
  /* GRANT DELETE ON GARDS_PRODUCT TO RMSAUTO; */
 
  /* GRANT INDEX ON GARDS_PRODUCT TO RMSAUTO; */
 
  /* GRANT INSERT ON GARDS_PRODUCT TO RMSAUTO; */
 
  /* GRANT SELECT ON GARDS_PRODUCT TO RMSAUTO; */
 
  /* GRANT UPDATE ON GARDS_PRODUCT TO RMSAUTO; */
 
  /* GRANT REFERENCES ON GARDS_PRODUCT TO RMSAUTO; */
 
  /* GRANT ON COMMIT REFRESH ON GARDS_PRODUCT TO RMSAUTO; */
 
  /* GRANT QUERY REWRITE ON GARDS_PRODUCT TO RMSAUTO; */
 
  /* GRANT DEBUG ON GARDS_PRODUCT TO RMSAUTO; */
 
  /* GRANT FLASHBACK ON GARDS_PRODUCT TO RMSAUTO; */
 
  /* GRANT SELECT ON GARDS_PRODUCT_TYPE TO PUBLIC; */
 
  /* GRANT ALTER ON GARDS_PRODUCT_TYPE TO RMSAUTO; */
 
  /* GRANT DELETE ON GARDS_PRODUCT_TYPE TO RMSAUTO; */
 
  /* GRANT INDEX ON GARDS_PRODUCT_TYPE TO RMSAUTO; */
 
  /* GRANT INSERT ON GARDS_PRODUCT_TYPE TO RMSAUTO; */
 
  /* GRANT SELECT ON GARDS_PRODUCT_TYPE TO RMSAUTO; */
 
  /* GRANT UPDATE ON GARDS_PRODUCT_TYPE TO RMSAUTO; */
 
  /* GRANT REFERENCES ON GARDS_PRODUCT_TYPE TO RMSAUTO; */
 
  /* GRANT ON COMMIT REFRESH ON GARDS_PRODUCT_TYPE TO RMSAUTO; */
 
  /* GRANT QUERY REWRITE ON GARDS_PRODUCT_TYPE TO RMSAUTO; */
 
  /* GRANT DEBUG ON GARDS_PRODUCT_TYPE TO RMSAUTO; */
 
  /* GRANT FLASHBACK ON GARDS_PRODUCT_TYPE TO RMSAUTO; */
 
  /* GRANT SELECT ON GARDS_REFLINE_MASTER TO PUBLIC; */
 
  /* GRANT SELECT ON GARDS_REFLINE_MASTER TO RMSAUTO; */

  /* GRANT SELECT ON GARDS_RELEVANT_NUCLIDES TO PUBLIC; */

  /* GRANT SELECT ON GARDS_RELEVANT_NUCLIDES TO RMSAUTO; */

  /* GRANT SELECT ON GARDS_SAMPLE_CAT TO PUBLIC; */

  /* GRANT DELETE ON GARDS_SAMPLE_CAT TO RMSAUTO; */

  /* GRANT INSERT ON GARDS_SAMPLE_CAT TO RMSAUTO; */

  /* GRANT SELECT ON GARDS_SAMPLE_CAT TO RMSAUTO; */

  /* GRANT UPDATE ON GARDS_SAMPLE_CAT TO RMSAUTO; */

  /* GRANT SELECT ON GARDS_STATIONS TO PUBLIC; */
 
  /* GRANT SELECT ON GARDS_STATIONS TO RMSAUTO; */
 
  /* GRANT REFERENCES ON GARDS_STATIONS TO RMSAUTO; */

  /* GRANT SELECT ON GARDS_USERENV TO PUBLIC; */

  /* GRANT SELECT ON GARDS_USERENV TO RMSAUTO; */
 
/* =============================================================================== */
/* GRANT Privilieges
/* =============================================================================== */

  /* GRANT SELECT ON GARDS_COMMENTS TO PUBLIC; */
  /* GRANT SELECT ON GARDS_EFFICIENCY_CAL TO PUBLIC; */
  /* GRANT SELECT ON GARDS_EFFICIENCY_PAIRS TO PUBLIC; */
  /* GRANT SELECT ON GARDS_ENERGY_CAL TO PUBLIC; */
  /* GRANT SELECT ON GARDS_ENERGY_PAIRS_ORIG TO PUBLIC; */
  /* GRANT SELECT ON GARDS_NUCL_IDED TO PUBLIC; */
  /* GRANT SELECT ON GARDS_NUCL_IDED_ORIG TO PUBLIC; */
  /* GRANT SELECT ON GARDS_NUCL_LINES_IDED TO PUBLIC; */
  /* GRANT SELECT ON GARDS_NUCL_LINES_IDED_ORIG TO PUBLIC; */
  /* GRANT SELECT ON GARDS_PEAKS TO PUBLIC; */
  /* GRANT SELECT ON GARDS_PEAKS_ORIG TO PUBLIC; */
  /* GRANT SELECT ON GARDS_RESOLUTION_CAL TO PUBLIC; */
  /* GRANT SELECT ON GARDS_SOH_NUM_DATA TO PUBLIC; */

  /* GRANT SELECT ON GARDS_SOH_CHAR_DATA TO PUBLIC; */

  /* GRANT SELECT ON GARDS_SAMPLE_STATUS TO PUBLIC; */

  /* GRANT SELECT ON GARDS_SAMPLE_FLAGS TO PUBLIC; */

  /* GRANT SELECT ON GARDS_RESOLUTION_PAIRS_ORIG TO PUBLIC; */

  /* GRANT SELECT ON GARDS_RESOLUTION_PAIRS TO PUBLIC; */

  /* GRANT SELECT ON GARDS_SAMPLE_AUX TO PUBLIC; */

  /* GRANT SELECT ON GARDS_SAMPLE_DATA TO PUBLIC; */

/* =============================================================================== */
/* Create Synonyms from RMSMAN                                                                   */
/* =============================================================================== */

/* CREATE OR REPLACE SYNONYM GARDS_DETECTORS FOR RMSMAN.GARDS_DETECTORS; */

/* CREATE OR REPLACE SYNONYM GARDS_CAT_TEMPLATE FOR RMSMAN.GARDS_CAT_TEMPLATE; */

/* CREATE OR REPLACE SYNONYM GARDS_NUCL_LIB FOR RMSMAN.GARDS_NUCL_LIB; */

/* CREATE OR REPLACE SYNONYM GARDS_NUCL_LINES_LIB FOR RMSMAN.GARDS_NUCL_LINES_LIB; */

/* CREATE OR REPLACE SYNONYM GARDS_PRODUCT FOR RMSMAN.GARDS_PRODUCT; */

/* CREATE OR REPLACE SYNONYM GARDS_PRODUCT_TYPE FOR RMSMAN.GARDS_PRODUCT_TYPE; */

/* CREATE OR REPLACE SYNONYM GARDS_REFLINE_MASTER FOR RMSMAN.GARDS_REFLINE_MASTER; */

/* CREATE OR REPLACE SYNONYM GARDS_RELEVANT_NUCLIDES FOR RMSMAN.GARDS_RELEVANT_NUCLIDES; */

/* CREATE OR REPLACE SYNONYM GARDS_SAMPLE_CAT FOR GARDS_AUTO_SAMPLE_CAT; */

/* CREATE OR REPLACE SYNONYM GARDS_STATIONS FOR RMSMAN.GARDS_STATIONS; */

/* CREATE OR REPLACE SYNONYM GARDS_USERENV FOR RMSMAN.GARDS_USERENV; */

/* CREATE OR REPLACE SYNONYM FILEPRODUCT FOR IDCX.FILEPRODUCT;*/

/* =============================================================================== */
/* Create Synonyms from IDCX                                                                   */
/* =============================================================================== */
/* CREATE OR REPLACE SYNONYM FPDESCRIPTION FOR IDCX.FPDESCRIPTION; */
